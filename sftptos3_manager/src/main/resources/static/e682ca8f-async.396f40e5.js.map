{"version":3,"sources":["src/pages/user/register/service.ts","src/pages/user/register/styles.ts","src/pages/user/register/index.tsx"],"sourcesContent":["import { request } from '@umijs/max';\r\n\r\nexport interface StateType {\r\n  status?: 'ok' | 'error';\r\n  currentAuthority?: 'user' | 'guest' | 'admin';\r\n}\r\n\r\nexport interface UserRegisterParams {\r\n  mail: string;\r\n  password: string;\r\n  confirm: string;\r\n  mobile: string;\r\n  captcha: string;\r\n  prefix: string;\r\n}\r\n\r\nexport async function fakeRegister(params: UserRegisterParams) {\r\n  return request('/api/register', {\r\n    method: 'POST',\r\n    data: params,\r\n  });\r\n}\r\n","import { createStyles } from 'antd-style';\r\n\r\nconst useStyles = createStyles(({ token }) => {\r\n  return {\r\n    main: {\r\n      width: '368px',\r\n      margin: '0 auto',\r\n      h3: { marginBottom: '20px', fontSize: '16px' },\r\n    },\r\n    password: {\r\n      marginBottom: '24px',\r\n      '.ant-form-item-explain': { display: 'none' },\r\n    },\r\n    getCaptcha: {\r\n      display: 'block',\r\n      width: '100%',\r\n    },\r\n\r\n    footer: {\r\n      width: '100%',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'space-between',\r\n    },\r\n    submit: {\r\n      width: '50%',\r\n    },\r\n    success: {\r\n      transition: 'color 0.3s',\r\n      color: token.colorSuccess,\r\n    },\r\n    warning: {\r\n      transition: 'color 0.3s',\r\n      color: token.colorWarning,\r\n    },\r\n    error: {\r\n      transition: 'color 0.3s',\r\n      color: token.colorError,\r\n    },\r\n    'progress-pass > .progress': {\r\n      '.ant-progress-bg': { backgroundColor: token.colorWarning },\r\n    },\r\n  };\r\n});\r\n\r\nexport default useStyles;\r\n","import { history, Link, useRequest } from '@umijs/max';\r\nimport {\r\n  Button,\r\n  Col,\r\n  Form,\r\n  Input,\r\n  message,\r\n  Popover,\r\n  Progress,\r\n  Row,\r\n  Select,\r\n  Space,\r\n} from 'antd';\r\nimport type { Store } from 'antd/es/form/interface';\r\nimport type { FC } from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport type { StateType } from './service';\r\nimport { fakeRegister } from './service';\r\nimport useStyles from './styles';\r\n\r\nconst FormItem = Form.Item;\r\nconst { Option } = Select;\r\n\r\nconst passwordProgressMap: {\r\n  ok: 'success';\r\n  pass: 'normal';\r\n  poor: 'exception';\r\n} = {\r\n  ok: 'success',\r\n  pass: 'normal',\r\n  poor: 'exception',\r\n};\r\nconst Register: FC = () => {\r\n  const { styles } = useStyles();\r\n  const [count, setCount]: [number, any] = useState(0);\r\n  const [open, setVisible]: [boolean, any] = useState(false);\r\n  const [prefix, setPrefix]: [string, any] = useState('86');\r\n  const [popover, setPopover]: [boolean, any] = useState(false);\r\n  const confirmDirty = false;\r\n  let interval: number | undefined;\r\n\r\n  const passwordStatusMap = {\r\n    ok: (\r\n      <div className={styles.success}>\r\n        <span>强度：强</span>\r\n      </div>\r\n    ),\r\n    pass: (\r\n      <div className={styles.warning}>\r\n        <span>强度：中</span>\r\n      </div>\r\n    ),\r\n    poor: (\r\n      <div className={styles.error}>\r\n        <span>强度：太短</span>\r\n      </div>\r\n    ),\r\n  };\r\n\r\n  const [form] = Form.useForm();\r\n  useEffect(\r\n    () => () => {\r\n      clearInterval(interval);\r\n    },\r\n    [interval],\r\n  );\r\n  const onGetCaptcha = () => {\r\n    let counts = 59;\r\n    setCount(counts);\r\n    interval = window.setInterval(() => {\r\n      counts -= 1;\r\n      setCount(counts);\r\n      if (counts === 0) {\r\n        clearInterval(interval);\r\n      }\r\n    }, 1000);\r\n  };\r\n  const getPasswordStatus = () => {\r\n    const value = form.getFieldValue('password');\r\n    if (value && value.length > 9) {\r\n      return 'ok';\r\n    }\r\n    if (value && value.length > 5) {\r\n      return 'pass';\r\n    }\r\n    return 'poor';\r\n  };\r\n  const { loading: submitting, run: register } = useRequest<{\r\n    data: StateType;\r\n  }>(fakeRegister, {\r\n    manual: true,\r\n    onSuccess: (data, params) => {\r\n      if (data.status === 'ok') {\r\n        message.success('注册成功！');\r\n        history.push({\r\n          pathname: `/user/register-result?account=${params[0].email}`,\r\n        });\r\n      }\r\n    },\r\n  });\r\n  const onFinish = (values: Store) => {\r\n    register(values);\r\n  };\r\n  const checkConfirm = (_: any, value: string) => {\r\n    const promise = Promise;\r\n    if (value && value !== form.getFieldValue('password')) {\r\n      return promise.reject('两次输入的密码不匹配!');\r\n    }\r\n    return promise.resolve();\r\n  };\r\n  const checkPassword = (_: any, value: string) => {\r\n    const promise = Promise;\r\n    // 没有值的情况\r\n    if (!value) {\r\n      setVisible(!!value);\r\n      return promise.reject('请输入密码!');\r\n    }\r\n    // 有值的情况\r\n    if (!open) {\r\n      setVisible(!!value);\r\n    }\r\n    setPopover(!popover);\r\n    if (value.length < 6) {\r\n      return promise.reject('');\r\n    }\r\n    if (value && confirmDirty) {\r\n      form.validateFields(['confirm']);\r\n    }\r\n    return promise.resolve();\r\n  };\r\n  const changePrefix = (value: string) => {\r\n    setPrefix(value);\r\n  };\r\n  const renderPasswordProgress = () => {\r\n    const value = form.getFieldValue('password');\r\n    const passwordStatus = getPasswordStatus();\r\n    return value?.length ? (\r\n      <div\r\n        className={styles[`progress-${passwordStatus}` as keyof typeof styles]}\r\n      >\r\n        <Progress\r\n          status={passwordProgressMap[passwordStatus]}\r\n          strokeWidth={6}\r\n          percent={value.length * 10 > 100 ? 100 : value.length * 10}\r\n          showInfo={false}\r\n        />\r\n      </div>\r\n    ) : null;\r\n  };\r\n  return (\r\n    <div className={styles.main}>\r\n      <h3>注册</h3>\r\n      <Form form={form} name=\"UserRegister\" onFinish={onFinish}>\r\n        <FormItem\r\n          name=\"email\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: '请输入邮箱地址!',\r\n            },\r\n            {\r\n              type: 'email',\r\n              message: '邮箱地址格式错误!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input size=\"large\" placeholder=\"邮箱\" />\r\n        </FormItem>\r\n        <Popover\r\n          getPopupContainer={(node) => {\r\n            if (node?.parentNode) {\r\n              return node.parentNode as HTMLElement;\r\n            }\r\n            return node;\r\n          }}\r\n          content={\r\n            open && (\r\n              <div\r\n                style={{\r\n                  padding: '4px 0',\r\n                }}\r\n              >\r\n                {passwordStatusMap[getPasswordStatus()]}\r\n                {renderPasswordProgress()}\r\n                <div\r\n                  style={{\r\n                    marginTop: 10,\r\n                  }}\r\n                >\r\n                  <span>请至少输入 6 个字符。请不要使用容易被猜到的密码。</span>\r\n                </div>\r\n              </div>\r\n            )\r\n          }\r\n          overlayStyle={{\r\n            width: 240,\r\n          }}\r\n          placement=\"right\"\r\n          open={open}\r\n        >\r\n          <FormItem\r\n            name=\"password\"\r\n            className={\r\n              form.getFieldValue('password') &&\r\n              form.getFieldValue('password').length > 0 &&\r\n              styles.password\r\n            }\r\n            rules={[\r\n              {\r\n                validator: checkPassword,\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              size=\"large\"\r\n              type=\"password\"\r\n              placeholder=\"至少6位密码，区分大小写\"\r\n            />\r\n          </FormItem>\r\n        </Popover>\r\n        <FormItem\r\n          name=\"confirm\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: '确认密码',\r\n            },\r\n            {\r\n              validator: checkConfirm,\r\n            },\r\n          ]}\r\n        >\r\n          <Input size=\"large\" type=\"password\" placeholder=\"确认密码\" />\r\n        </FormItem>\r\n        <FormItem\r\n          name=\"mobile\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: '请输入手机号!',\r\n            },\r\n            {\r\n              pattern: /^\\d{11}$/,\r\n              message: '手机号格式错误!',\r\n            },\r\n          ]}\r\n        >\r\n          <Space.Compact style={{ width: '100%' }}>\r\n            <Select\r\n              size=\"large\"\r\n              value={prefix}\r\n              onChange={changePrefix}\r\n              style={{\r\n                width: '30%',\r\n              }}\r\n            >\r\n              <Option value=\"86\">+86</Option>\r\n              <Option value=\"87\">+87</Option>\r\n            </Select>\r\n\r\n            <Input size=\"large\" placeholder=\"手机号\" />\r\n          </Space.Compact>\r\n        </FormItem>\r\n        <Row gutter={8}>\r\n          <Col span={16}>\r\n            <FormItem\r\n              name=\"captcha\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: '请输入验证码!',\r\n                },\r\n              ]}\r\n            >\r\n              <Input size=\"large\" placeholder=\"验证码\" />\r\n            </FormItem>\r\n          </Col>\r\n          <Col span={8}>\r\n            <Button\r\n              size=\"large\"\r\n              disabled={!!count}\r\n              className={styles.getCaptcha}\r\n              onClick={onGetCaptcha}\r\n            >\r\n              {count ? `${count} s` : '获取验证码'}\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        <FormItem>\r\n          <div className={styles.footer}>\r\n            <Button\r\n              size=\"large\"\r\n              loading={submitting}\r\n              className={styles.submit}\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n            >\r\n              <span>注册</span>\r\n            </Button>\r\n            <Link to=\"/user/login\">\r\n              <span>使用已有账户登录</span>\r\n            </Link>\r\n          </div>\r\n        </FormItem>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\nexport default Register;\r\n"],"names":[],"mappings":"ilBAgBO,eAAe,EAAa,CAA0B,EAC3D,MAAO,GAAA,SAAO,EAAC,gBAAiB,CAC9B,OAAQ,OACR,KAAM,CACR,GACF,CCnBA,IAAM,EAAY,GAAA,0BAAY,EAAC,CAAC,CAAE,MAAA,CAAK,CAAE,GAChC,CAAA,CACL,KAAM,CACJ,MAAO,QACP,OAAQ,SACR,GAAI,CAAE,aAAc,OAAQ,SAAU,MAAO,CAC/C,EACA,SAAU,CACR,aAAc,OACd,yBAA0B,CAAE,QAAS,MAAO,CAC9C,EACA,WAAY,CACV,QAAS,QACT,MAAO,MACT,EAEA,OAAQ,CACN,MAAO,OACP,QAAS,OACT,WAAY,SACZ,eAAgB,eAClB,EACA,OAAQ,CACN,MAAO,KACT,EACA,QAAS,CACP,WAAY,aACZ,MAAO,EAAM,YAAY,AAC3B,EACA,QAAS,CACP,WAAY,aACZ,MAAO,EAAM,YAAY,AAC3B,EACA,MAAO,CACL,WAAY,aACZ,MAAO,EAAM,UAAU,AACzB,EACA,4BAA6B,CAC3B,mBAAoB,CAAE,gBAAiB,EAAM,YAAY,AAAC,CAC5D,CACF,CAAA,GCtBI,EAAW,SAAI,CAAC,IAAI,CACpB,CAAE,OAAA,CAAM,CAAE,CAAG,SAAM,CAEnB,EAIF,CACF,GAAI,UACJ,KAAM,SACN,KAAM,WACR,EACM,EAAe,SAOf,EANJ,GAAM,CAAE,OAAA,CAAM,CAAE,CAAG,IACb,CAAC,EAAO,EAAS,CAAkB,GAAA,UAAQ,EAAC,GAC5C,CAAC,EAAM,EAAW,CAAmB,GAAA,UAAQ,EAAC,CAAA,GAC9C,CAAC,EAAQ,EAAU,CAAkB,GAAA,UAAQ,EAAC,MAC9C,CAAC,EAAS,EAAW,CAAmB,GAAA,UAAQ,EAAC,CAAA,GAIjD,EAAoB,CACxB,GACE,UAAC,OAAI,UAAW,EAAO,OAAO,UAC5B,UAAC,iBAAK,+BAGV,KACE,UAAC,OAAI,UAAW,EAAO,OAAO,UAC5B,UAAC,iBAAK,+BAGV,KACE,UAAC,OAAI,UAAW,EAAO,KAAK,UAC1B,UAAC,iBAAK,oCAGZ,EAEM,CAAC,EAAK,CAAG,SAAI,CAAC,OAAO,GAC3B,GAAA,WAAS,EACP,IAAM,KACJ,cAAc,GAChB,EACA,CAAC,EAAS,EAaZ,IAAM,EAAoB,KACxB,IAAM,EAAQ,EAAK,aAAa,CAAC,mBACjC,AAAI,GAAS,EAAM,MAAM,CAAG,EACnB,KAEL,GAAS,EAAM,MAAM,CAAG,EACnB,OAEF,OACT,EACM,CAAE,QAAS,CAAU,CAAE,IAAK,CAAQ,CAAE,CAAG,GAAA,YAAU,EAEtD,EAAc,CACf,OAAQ,CAAA,EACR,UAAW,CAAC,EAAM,KACI,OAAhB,EAAK,MAAM,GACb,SAAO,CAAC,OAAO,CAAC,kCAChB,SAAO,CAAC,IAAI,CAAC,CACX,SAAU,CAAC,8BAA8B,EAAE,CAAM,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,AAC9D,IAEJ,CACF,GAkDA,MACE,WAAC,OAAI,UAAW,EAAO,IAAI,WACzB,UAAC,eAAG,iBACJ,WAAC,SAAI,EAAC,KAAM,EAAM,KAAK,eAAe,SApDzB,AAAC,IAChB,EAAS,GACX,YAmDM,UAAC,GACC,KAAK,QACL,MAAO,CACL,CACE,SAAU,CAAA,EACV,QAAS,6CACX,EACA,CACE,KAAM,QACN,QAAS,mDACX,EACD,UAED,UAAC,SAAK,EAAC,KAAK,QAAQ,YAAY,mBAElC,UAAC,SAAO,EACN,kBAAmB,AAAC,GAClB,OAAI,SAAA,EAAM,UAAU,EACX,EAAK,UAAU,CAEjB,EAET,QACE,GACE,WAAC,OACC,MAAO,CACL,QAAS,OACX,YAEC,CAAiB,CAAC,IAAoB,CACtC,AAlDgB,CAAA,KAC7B,IAAM,EAAQ,EAAK,aAAa,CAAC,YAC3B,EAAiB,IACvB,MAAO,OAAA,SAAA,EAAO,MAAM,EAClB,UAAC,OACC,UAAW,CAAM,CAAC,CAAC,SAAS,EAAE,EAAe,CAAC,CAAwB,UAEtE,UAAC,SAAQ,EACP,OAAQ,CAAmB,CAAC,EAAe,CAC3C,YAAa,EACb,QAAS,AAAe,GAAf,EAAM,MAAM,CAAQ,IAAM,IAAM,AAAe,GAAf,EAAM,MAAM,CACrD,SAAU,CAAA,MAGZ,KACN,CAAA,IAoCc,UAAC,OACC,MAAO,CACL,UAAW,EACb,WAEA,UAAC,iBAAK,uJAKd,aAAc,CACZ,MAAO,GACT,EACA,UAAU,QACV,KAAM,WAEN,UAAC,GACC,KAAK,WACL,UACE,EAAK,aAAa,CAAC,aACnB,EAAK,aAAa,CAAC,YAAY,MAAM,CAAG,GACxC,EAAO,QAAQ,CAEjB,MAAO,CACL,CACE,UAnGQ,CAAC,EAAQ,KAC7B,IAAM,EAAU,eAEhB,AAAK,GAKA,GACH,EAAW,CAAC,CAAC,GAEf,EAAW,CAAC,GACR,EAAM,MAAM,CAAG,GACV,EAAQ,MAAM,CAAC,IAKjB,EAAQ,OAAO,IAdpB,EAAW,CAAC,CAAC,GACN,EAAQ,MAAM,CAAC,oCAc1B,CAiFY,EACD,UAED,UAAC,SAAK,EACJ,KAAK,QACL,KAAK,WACL,YAAY,4EAIlB,UAAC,GACC,KAAK,UACL,MAAO,CACL,CACE,SAAU,CAAA,EACV,QAAS,0BACX,EACA,CACE,UA7HS,CAAC,EAAQ,KAC5B,IAAM,EAAU,eAChB,AAAI,GAAS,IAAU,EAAK,aAAa,CAAC,YACjC,EAAQ,MAAM,CAAC,iEAEjB,EAAQ,OAAO,GACxB,CAwHU,EACD,UAED,UAAC,SAAK,EAAC,KAAK,QAAQ,KAAK,WAAW,YAAY,+BAElD,UAAC,GACC,KAAK,SACL,MAAO,CACL,CACE,SAAU,CAAA,EACV,QAAS,uCACX,EACA,CACE,QAAS,WACT,QAAS,6CACX,EACD,UAED,WAAC,SAAK,CAAC,OAAO,EAAC,MAAO,CAAE,MAAO,MAAO,YACpC,WAAC,SAAM,EACL,KAAK,QACL,MAAO,EACP,SAzHS,AAAC,IACpB,EAAU,GACZ,EAwHY,MAAO,CACL,MAAO,KACT,YAEA,UAAC,GAAO,MAAM,cAAK,QACnB,UAAC,GAAO,MAAM,cAAK,WAGrB,UAAC,SAAK,EAAC,KAAK,QAAQ,YAAY,4BAGpC,WAAC,SAAG,EAAC,OAAQ,YACX,UAAC,SAAG,EAAC,KAAM,YACT,UAAC,GACC,KAAK,UACL,MAAO,CACL,CACE,SAAU,CAAA,EACV,QAAS,uCACX,EACD,UAED,UAAC,SAAK,EAAC,KAAK,QAAQ,YAAY,2BAGpC,UAAC,SAAG,EAAC,KAAM,WACT,UAAC,SAAM,EACL,KAAK,QACL,SAAU,CAAC,CAAC,EACZ,UAAW,EAAO,UAAU,CAC5B,QAxNS,KACnB,IAAI,EAAS,GACb,EADa,IAEb,EAAW,OAAO,WAAW,CAAC,KAE5B,EADA,GAAU,GAEK,IAAX,GACF,cAAc,GAElB,EAAG,KACL,WAgNa,EAAQ,CAAC,EAAE,EAAM,EAAE,CAAC,CAAG,wCAI9B,UAAC,YACC,WAAC,OAAI,UAAW,EAAO,MAAM,WAC3B,UAAC,SAAM,EACL,KAAK,QACL,QAAS,EACT,UAAW,EAAO,MAAM,CACxB,KAAK,UACL,SAAS,kBAET,UAAC,iBAAK,mBAER,UAAC,MAAI,EAAC,GAAG,uBACP,UAAC,iBAAK,kEAOpB"}