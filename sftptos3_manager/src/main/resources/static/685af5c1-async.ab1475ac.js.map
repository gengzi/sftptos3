{"version":3,"sources":["src/services/admin.ts","src/pages/adminManagement/list/index.tsx"],"sourcesContent":["import { request } from '@umijs/max';\n\n// 获取管理员列表\nexport async function queryAdmins(params?: { username?: string; current?: number; pageSize?: number }) {\n  try {\n    // 调用真实的API接口\n    const response = await request('/api/admin/list', {\n      method: 'GET',\n      headers: {\n        'accept': '*/*',\n      },\n      params: {\n        username: params?.username,\n        page: params?.current ? params.current - 1 : 0,\n        size: params?.pageSize || 10,\n      },\n    });\n    \n    // 根据响应返回结果\n    if (response.success || response.code === 200) {\n      // 转换后端返回的管理员数据格式\n      const transformedData = response.data.content.map((admin: any) => ({\n        id: admin.id.toString(),\n        username: admin.username,\n      }));\n      \n      return {\n        success: true,\n        data: transformedData,\n        total: response.data.totalElements,\n      };\n    } else {\n      // 当code非200时，返回后端提供的错误信息\n      return {\n        success: false,\n        code: response.code,\n        message: response.message || '获取管理员列表失败',\n      };\n    }\n  } catch (error) {\n    console.error('获取管理员列表失败:', error);\n    return {\n      success: false,\n      message: '获取管理员列表失败',\n    };\n  }\n}\n\n// 创建管理员\nexport async function createAdmin(params: { username: string; passwd: string }) {\n  try {\n    // 调用真实的API接口\n    const response = await request('/api/admin/create', {\n      method: 'POST',\n      headers: {\n        'accept': '*/*',\n        'Content-Type': 'application/json',\n      },\n      data: {\n        username: params.username,\n        passwd: params.passwd,\n      },\n    });\n    \n    // 根据响应返回结果\n    if (response.success || response.code === 200) {\n      return {\n        success: true,\n        data: response.data,\n      };\n    } else {\n      // 当code非200时，返回后端提供的错误信息\n      return {\n        success: false,\n        code: response.code,\n        message: response.message || '创建管理员失败',\n      };\n    }\n  } catch (error) {\n    console.error('创建管理员失败:', error);\n    return {\n      success: false,\n      message: '创建管理员失败',\n    };\n  }\n}\n\n// 更新管理员密码\nexport async function updateAdmin(id: string, params: { passwd: string }) {\n  try {\n    // 调用真实的API接口\n    const response = await request('/api/admin/update', {\n      method: 'POST',\n      headers: {\n        'accept': '*/*',\n        'Content-Type': 'application/json',\n      },\n      data: {\n        id: parseInt(id), // 转换为数字类型\n        passwd: params.passwd,\n      },\n    });\n    \n    // 根据响应返回结果\n    if (response.success || response.code === 200) {\n      return {\n        success: true,\n        data: response.data,\n      };\n    } else {\n      // 当code非200时，返回后端提供的错误信息\n      return {\n        success: false,\n        code: response.code,\n        message: response.message || '更新管理员密码失败',\n      };\n    }\n  } catch (error) {\n    console.error('更新管理员密码失败:', error);\n    return {\n      success: false,\n      message: '更新管理员密码失败',\n    };\n  }\n}\n\n// 删除管理员\nexport async function deleteAdmin(id: string) {\n  try {\n    // 调用真实的API接口\n    const response = await request('/api/admin/remove', {\n      method: 'POST',\n      headers: {\n        'accept': '*/*',\n      },\n      params: {\n        id: id,\n      },\n    });\n    \n    // 根据响应返回结果\n    if (response.success || response.code === 200) {\n      return {\n        success: true,\n        data: response.data,\n      };\n    } else {\n      // 当code非200时，返回后端提供的错误信息\n      return {\n        success: false,\n        code: response.code,\n        message: response.message || '删除管理员失败',\n      };\n    }\n  } catch (error) {\n    console.error('删除管理员失败:', error);\n    return {\n      success: false,\n      message: error.message || '删除管理员失败',\n    };\n  }\n}","import React, { useState, useRef } from 'react';\nimport { Button, Modal, Form, Input, Space, message, Popconfirm } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport { ProTable, ProColumns } from '@ant-design/pro-components';\nimport { queryAdmins, createAdmin, updateAdmin, deleteAdmin } from '@/services/admin';\n\n// 管理员类型定义\ninterface Admin {\n  id: string;\n  username: string;\n  password: string;\n}\n\nconst AdminListPage: React.FC = () => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [isAddModalVisible, setIsAddModalVisible] = useState<boolean>(false);\n  const [isEditModalVisible, setIsEditModalVisible] = useState<boolean>(false);\n  const [currentAdmin, setCurrentAdmin] = useState<Admin | null>(null);\n  const [addForm] = Form.useForm();\n  const [editForm] = Form.useForm();\n  const actionRef = useRef<any>(null);\n\n  // 获取管理员列表数据\n  const fetchAdmins = async (params?: { username?: string; current?: number; pageSize?: number }) => {\n    setLoading(true);\n    try {\n      const response = await queryAdmins(params);\n      if (response.success) {\n        // 为每个管理员添加密码占位符\n        const adminsWithPassword = response.data.map((admin: any) => ({\n          ...admin,\n          password: '******',\n        }));\n        // 直接返回符合ProTable要求的数据结构\n        return {\n          data: adminsWithPassword,\n          total: response.total || 0,\n          success: true,\n        };\n      } else {\n        message.error(response.message || '获取管理员列表失败');\n        return {\n          data: [],\n          total: 0,\n          success: false,\n        };\n      }\n    } catch (error) {\n      console.error('获取管理员列表失败:', error);\n      message.error('获取管理员列表失败');\n      return {\n        data: [],\n        total: 0,\n        success: false,\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 显示添加管理员模态框\n  const showAddModal = () => {\n    addForm.resetFields();\n    setIsAddModalVisible(true);\n  };\n\n  // 显示编辑管理员模态框\n  const showEditModal = (admin: Admin) => {\n    setCurrentAdmin(admin);\n    editForm.setFieldsValue({\n      username: admin.username,\n      password: '', // 编辑时密码框为空\n    });\n    setIsEditModalVisible(true);\n  };\n\n  // 刷新表格\n  const refreshTable = () => {\n    if (actionRef.current) {\n      actionRef.current.reload();\n    }\n  };\n\n  // 处理添加管理员\n  const handleAddAdmin = () => {\n    addForm.validateFields().then(values => {\n      setLoading(true);\n      createAdmin({\n        username: values.username,\n        passwd: values.password,\n      })\n        .then((response) => {\n          if (response.success) {\n            setIsAddModalVisible(false);\n            message.success('管理员添加成功');\n            // 重新获取管理员列表\n            refreshTable();\n          } else {\n            message.error(response.message || '管理员添加失败');\n          }\n        })\n        .catch((error) => {\n          console.error('管理员添加失败:', error);\n          message.error('管理员添加失败');\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    });\n  };\n\n  // 处理编辑管理员\n  const handleEditAdmin = () => {\n    editForm.validateFields().then(values => {\n      if (!currentAdmin) return;\n      \n      setLoading(true);\n      updateAdmin(currentAdmin.id, {\n        passwd: values.password,\n      })\n        .then((response) => {\n          if (response.success) {\n            setIsEditModalVisible(false);\n            message.success('管理员密码修改成功');\n            // 重新获取管理员列表\n            refreshTable();\n          } else {\n            message.error(response.message || '管理员密码修改失败');\n          }\n        })\n        .catch((error) => {\n          console.error('管理员密码修改失败:', error);\n          message.error('管理员密码修改失败');\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    });\n  };\n\n  // 处理删除管理员\n  const handleDeleteAdmin = (id: string) => {\n    setLoading(true);\n    deleteAdmin(id)\n      .then((response) => {\n        if (response.success) {\n          message.success('管理员删除成功');\n          // 重新获取管理员列表\n          refreshTable();\n        } else {\n          message.error(response.message || '管理员删除失败');\n        }\n      })\n      .catch((error) => {\n        console.error('管理员删除失败:', error);\n        message.error('管理员删除失败');\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  // 表格列定义\n  const columns: ProColumns<Admin>[] = [\n    {\n      title: '账户',\n      dataIndex: 'username',\n      key: 'username',\n      width: 200,\n      sorter: true,\n      hideInSearch: false,\n    },\n    {\n      title: '密码',\n      dataIndex: 'password',\n      key: 'password',\n      width: 200,\n      hideInSearch: true,\n    },\n    {\n      title: '操作',\n      valueType: 'option',\n      key: 'action',\n      width: 150,\n      render: (_, record) => (\n        <Space size=\"middle\">\n          <Button \n            type=\"link\" \n            icon={<EditOutlined />} \n            onClick={() => showEditModal(record)}\n          >\n            编辑\n          </Button>\n          <Popconfirm\n            title=\"确定要删除这个管理员吗？\"\n            onConfirm={() => handleDeleteAdmin(record.id)}\n            okText=\"确定\"\n            cancelText=\"取消\"\n          >\n            <Button \n              type=\"link\" \n              danger \n              icon={<DeleteOutlined />}\n              disabled={record.username === 'admin'} // 系统默认管理员不可删除\n            >\n              删除\n            </Button>\n          </Popconfirm>\n        </Space>\n      ),\n    },\n  ];\n\n  return (\n    <div className=\"p-6\">\n      <div className=\"mb-6\" style={{ marginBottom: '24px' }}>\n        <div className=\"flex justify-between items-center\">\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={showAddModal}>\n            添加管理员\n          </Button>\n        </div>\n      </div>\n\n      <ProTable<Admin>\n        columns={columns}\n        actionRef={actionRef}\n        request={fetchAdmins}\n        rowKey=\"id\"\n        loading={loading}\n        pagination={{\n          pageSize: 10,\n          showSizeChanger: true,\n          showTotal: (total, range) => `第 ${range[0]}-${range[1]} 条，共 ${total} 条`,\n        }}\n        search={{\n          labelWidth: 'auto',\n        }}\n        options={{\n          setting: {\n            listsHeight: 400,\n          },\n        }}\n      />\n\n      {/* 添加管理员模态框 */}\n      <Modal\n        title=\"添加管理员\"\n        open={isAddModalVisible}\n        onOk={handleAddAdmin}\n        onCancel={() => setIsAddModalVisible(false)}\n        okText=\"确定\"\n        cancelText=\"取消\"\n        confirmLoading={loading}\n      >\n        <Form\n          form={addForm}\n          layout=\"vertical\"\n          initialValues={{\n            username: '',\n            password: '',\n          }}\n        >\n          <Form.Item\n            label=\"账户\"\n            name=\"username\"\n            rules={[\n              { required: true, message: '请输入账户名' },\n              { min: 3, message: '账户名长度至少为3个字符' },\n            ]}\n          >\n            <Input placeholder=\"请输入账户名\" />\n          </Form.Item>\n          <Form.Item\n            label=\"密码\"\n            name=\"password\"\n            rules={[\n              { required: true, message: '请输入密码' },\n              { min: 6, message: '密码长度至少为6个字符' },\n            ]}\n          >\n            <Input.Password placeholder=\"请输入密码\" />\n          </Form.Item>\n        </Form>\n      </Modal>\n\n      {/* 编辑管理员模态框 */}\n      <Modal\n        title=\"编辑管理员\"\n        open={isEditModalVisible}\n        onOk={handleEditAdmin}\n        onCancel={() => setIsEditModalVisible(false)}\n        okText=\"确定\"\n        cancelText=\"取消\"\n        confirmLoading={loading}\n      >\n        <Form\n          form={editForm}\n          layout=\"vertical\"\n        >\n          <Form.Item\n            label=\"账户\"\n            name=\"username\"\n          >\n            <Input disabled placeholder=\"账户名不可修改\" />\n          </Form.Item>\n          <Form.Item\n            label=\"新密码\"\n            name=\"password\"\n            rules={[\n              { required: true, message: '请输入新密码' },\n              { min: 6, message: '密码长度至少为6个字符' },\n            ]}\n          >\n            <Input.Password placeholder=\"请输入新密码\" />\n          </Form.Item>\n        </Form>\n      </Modal>\n    </div>\n  );\n};\n\nexport default AdminListPage;"],"names":[],"mappings":"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"}