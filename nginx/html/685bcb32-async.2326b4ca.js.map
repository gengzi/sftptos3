{"version":3,"sources":["src/pages/s3Management/components/S3Form.tsx","src/pages/s3Management/index.tsx"],"sourcesContent":["import React from 'react';\nimport { Modal, Form, Input, Button, Space, Alert } from 'antd';\nimport { useIntl } from '@umijs/max';\n\ninterface S3FormProps {\n  visible: boolean;\n  initialValues?: any;\n  onFinish: (values: any) => void;\n  onCancel: () => void;\n}\n\nconst S3Form: React.FC<S3FormProps> = ({\n  visible,\n  initialValues,\n  onFinish,\n  onCancel,\n}) => {\n  const [form] = Form.useForm();\n  const intl = useIntl();\n\n  React.useEffect(() => {\n    if (visible) {\n      if (initialValues) {\n        form.setFieldsValue(initialValues);\n      } else {\n        form.resetFields();\n      }\n    }\n  }, [visible, initialValues, form]);\n\n  const handleFinish = (values: any) => {\n    onFinish(values);\n    form.resetFields();\n  };\n\n  return (\n    <Modal\n      title={initialValues ? intl.formatMessage({ id: 'pages.s3Management.editModalTitle' }) : intl.formatMessage({ id: 'pages.s3Management.addModalTitle' })}\n      open={visible}\n      onCancel={onCancel}\n      footer={null}\n      width={600}\n    >\n      <Form\n          form={form}\n          onFinish={handleFinish}\n          labelCol={{ span: 6 }}\n          wrapperCol={{ span: 16 }}\n        >\n          {initialValues && (\n            <Alert\n              message={intl.formatMessage({ id: 'pages.s3Management.configEffectDescription' })}\n              description={intl.formatMessage({ id: 'pages.s3Management.configEffectDetails' })}\n              type=\"info\"\n              showIcon\n              style={{ marginBottom: 16 }}\n            />\n          )}\n        <Form.Item\n          label={intl.formatMessage({ id: 'pages.s3Management.nameLabel' })}\n          name=\"s3Name\"\n          rules={[{ required: true, message: intl.formatMessage({ id: 'pages.s3Management.pleaseInputName' }) }]}\n        >\n          <Input \n            placeholder={intl.formatMessage({ id: 'pages.s3Management.placeholderName' })}\n            disabled={!!initialValues} \n          />\n        </Form.Item>\n\n        <Form.Item\n          label={intl.formatMessage({ id: 'pages.s3Management.endpointLabel' })}\n          name=\"endpoint\"\n          rules={[{ required: true, message: intl.formatMessage({ id: 'pages.s3Management.pleaseInputEndpoint' }) }]}\n        >\n          <Input placeholder={intl.formatMessage({ id: 'pages.s3Management.placeholderEndpoint' })} />\n        </Form.Item>\n\n        <Form.Item\n          label={intl.formatMessage({ id: 'pages.s3Management.accessKeyLabel' })}\n          name=\"accessKey\"\n          rules={[{ required: true, message: intl.formatMessage({ id: 'pages.s3Management.pleaseInputAccessKey' }) }]}\n        >\n          <Input placeholder={intl.formatMessage({ id: 'pages.s3Management.placeholderAccessKey' })} />\n        </Form.Item>\n\n        <Form.Item\n          label={intl.formatMessage({ id: 'pages.s3Management.secretKeyLabel' })}\n          name=\"accessSecret\"\n          rules={[{ required: true, message: intl.formatMessage({ id: 'pages.s3Management.pleaseInputSecretKey' }) }]}\n        >\n          <Input.Password placeholder={intl.formatMessage({ id: 'pages.s3Management.placeholderSecretKey' })} />\n        </Form.Item>\n\n        <Form.Item\n          label={intl.formatMessage({ id: 'pages.s3Management.bucketLabel' })}\n          name=\"bucket\"\n          rules={[{ required: true, message: intl.formatMessage({ id: 'pages.s3Management.pleaseInputBucket' }) }]}\n        >\n          <Input placeholder={intl.formatMessage({ id: 'pages.s3Management.placeholderBucket' })} />\n        </Form.Item>\n\n        <Form.Item\n          label={intl.formatMessage({ id: 'pages.s3Management.regionLabel' })}\n          name=\"region\"\n          tooltip={intl.formatMessage({ id: 'pages.s3Management.regionTooltip' })}\n        >\n          <Input placeholder={intl.formatMessage({ id: 'pages.s3Management.placeholderRegion' })} />\n        </Form.Item>\n\n        <Form.Item wrapperCol={{ offset: 6, span: 16 }}>\n          <Space>\n            <Button type=\"primary\" htmlType=\"submit\">\n              {initialValues ? intl.formatMessage({ id: 'pages.s3Management.updateButtonText' }) : intl.formatMessage({ id: 'pages.s3Management.addButtonText' })}\n            </Button>\n            <Button onClick={onCancel}>{intl.formatMessage({ id: 'pages.s3Management.cancelButtonText' })}</Button>\n          </Space>\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default S3Form;","import React, { useState, useEffect, useRef } from 'react';\nimport { Button, Space, message, Popconfirm } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport { ProTable, ProColumns } from '@ant-design/pro-components';\nimport { useIntl } from '@umijs/max';\nimport S3Form from './components/S3Form';\nimport { queryS3Storages, createS3Storage, updateS3Storage, deleteS3Storage } from '@/services/s3';\n\ninterface S3Config {\n  id: string;\n  s3Name: string;\n  endpoint: string;\n  accessKey: string;\n  secretKey: string;\n  bucket: string;\n  region?: string;\n}\n\nconst S3Management: React.FC = () => {\n  const [modalVisible, setModalVisible] = useState(false);\n  const [currentConfig, setCurrentConfig] = useState<S3Config | null>(null);\n  const actionRef = useRef();\n  const intl = useIntl();\n\n  // 获取S3配置列表\n  const fetchS3Configs = async (params: { s3Name?: string; current?: number; pageSize?: number; sort?: string }) => {\n    try {\n      const response = await queryS3Storages({\n        s3Name: params.s3Name,\n        page: params.current ? params.current - 1 : 0, // 转换为0基索引\n        size: params.pageSize || 10,\n        sort: params.sort || 'createTime'\n      });\n      \n      if (response.success) {\n        // 转换数据格式以匹配表格显示\n        const formattedData = response.data.map((item: any) => ({\n          ...item,\n          secretKey: item.accessSecret // 将accessSecret映射为secretKey以匹配表单字段\n        }));\n        \n        return {\n          data: formattedData,\n          success: true,\n          total: response.total\n        };\n      } else {\n        message.error(response.message || '获取S3配置列表失败');\n        return {\n          data: [],\n          success: false,\n          total: 0\n        };\n      }\n    } catch (error) {\n      message.error('获取S3配置列表失败');\n      return {\n        data: [],\n        success: false,\n        total: 0\n      };\n    }\n  };\n\n  // 添加S3配置\n  const handleAddS3Config = async (values: any) => {\n    try {\n      // 转换表单字段名以匹配API要求\n      const requestData = {\n        s3Name: values.s3Name,\n        endpoint: values.endpoint,\n        accessKey: values.accessKey,\n        accessSecret: values.accessSecret, // 直接使用accessSecret字段\n        bucket: values.bucket,\n        region: values.region\n      };\n      \n      const response = await createS3Storage(requestData);\n      if (response.success) {\n        message.success('添加S3配置成功');\n        setModalVisible(false);\n        // 刷新表格数据\n        if (actionRef.current) {\n          actionRef.current.reload();\n        }\n      } else {\n        message.error(response.message || '添加S3配置失败');\n      }\n    } catch (error) {\n      message.error('添加S3配置失败');\n    }\n  };\n\n  // 编辑S3配置\n  const handleEditS3Config = async (values: any) => {\n    try {\n      // 转换表单字段名以匹配API要求并添加id\n      const requestData = {\n        s3Name: values.s3Name,\n        endpoint: values.endpoint,\n        accessKey: values.accessKey,\n        accessSecret: values.accessSecret, // 直接使用accessSecret字段\n        bucket: values.bucket,\n        region: values.region,\n        id: currentConfig?.id // 添加id字段\n      };\n      \n      if (currentConfig && currentConfig.id) {\n        const response = await updateS3Storage(requestData);\n        if (response.success) {\n          message.success('编辑S3配置成功');\n          setModalVisible(false);\n          // 刷新表格数据\n          if (actionRef.current) {\n            actionRef.current.reload();\n          }\n        } else {\n          message.error(response.message || '编辑S3配置失败');\n        }\n      } else {\n        message.error('编辑S3配置失败：缺少配置ID');\n      }\n    } catch (error) {\n      message.error('编辑S3配置失败');\n    }\n  };\n\n  // 删除S3配置\n  const handleDeleteS3Config = async (id: string) => {\n    try {\n      const response = await deleteS3Storage(id);\n      if (response.success) {\n        message.success('删除S3配置成功');\n        // 刷新表格数据\n        if (actionRef.current) {\n          actionRef.current.reload();\n        }\n      } else {\n        // 确保正确显示后端返回的错误信息\n        // 特别是当code为1007且message为\"当前配置正在使用中\"的情况\n        message.error(response.message || '删除S3配置失败');\n      }\n    } catch (error) {\n      message.error('删除S3配置失败');\n    }\n  };\n\n  // 显示编辑模态框\n  const showEditModal = (record: S3Config) => {\n    setCurrentConfig(record);\n    setModalVisible(true);\n  };\n\n  // 显示添加模态框\n  const showAddModal = () => {\n    setCurrentConfig(null);\n    setModalVisible(true);\n  };\n\n  \n\n  // 列配置\n  const columns = [\n    {\n      title: intl.formatMessage({ id: 'pages.s3Management.columnName' }),\n      dataIndex: 's3Name',\n      key: 's3Name',\n      valueType: 'text',\n      sorter: true,\n      hideInSearch: false,\n    },\n    {\n      title: intl.formatMessage({ id: 'pages.s3Management.columnEndpoint' }),\n      dataIndex: 'endpoint',\n      key: 'endpoint',\n      valueType: 'text',\n      hideInSearch: true,\n    },\n    {\n      title: intl.formatMessage({ id: 'pages.s3Management.columnAccessKey' }),\n      dataIndex: 'accessKey',\n      key: 'accessKey',\n      valueType: 'text',\n      hideInSearch: true,\n    },\n    {\n      title: intl.formatMessage({ id: 'pages.s3Management.columnBucket' }),\n      dataIndex: 'bucket',\n      key: 'bucket',\n      valueType: 'text',\n      hideInSearch: true,\n    },\n    {\n      title: intl.formatMessage({ id: 'pages.s3Management.columnRegion' }),\n      dataIndex: 'region',\n      key: 'region',\n      valueType: 'text',\n      hideInSearch: true,\n    },\n    {\n      title: intl.formatMessage({ id: 'pages.s3Management.columnAction' }),\n      valueType: 'option',\n      render: (_: any, record: S3Config) => (\n        <Space>\n          <Button\n            type=\"link\"\n            icon={<EditOutlined />}\n            onClick={() => showEditModal(record)}\n          >\n            {intl.formatMessage({ id: 'pages.s3Management.editButton' })}\n          </Button>\n          <Popconfirm\n            title={intl.formatMessage({ id: 'pages.s3Management.deleteConfirmTitle' })}\n            onConfirm={() => handleDeleteS3Config(record.id)}\n            okText={intl.formatMessage({ id: 'pages.common.confirm' })}\n            cancelText={intl.formatMessage({ id: 'pages.common.cancel' })}\n          >\n            <Button\n              type=\"link\"\n              danger\n              icon={<DeleteOutlined />}\n            >\n              {intl.formatMessage({ id: 'pages.s3Management.deleteButton' })}\n            </Button>\n          </Popconfirm>\n        </Space>\n      ),\n    },\n  ];\n\n  return (\n    <div>\n      <Space style={{ marginBottom: 16 }}>\n        <Button\n          type=\"primary\"\n          icon={<PlusOutlined />}\n          onClick={showAddModal}\n        >\n          {intl.formatMessage({ id: 'pages.s3Management.addButton' })}\n        </Button>\n      </Space>\n\n      <ProTable\n        columns={columns}\n        actionRef={actionRef}\n        request={fetchS3Configs}\n        rowKey=\"id\"\n        pagination={{\n          pageSize: 10,\n        }}\n        search={{\n          labelWidth: 'auto',\n        }}\n        options={{\n          setting: {\n            listsHeight: 400,\n          },\n        }}\n      />\n\n      {/* 添加/编辑S3配置模态框 */}\n      <S3Form\n        visible={modalVisible}\n        initialValues={currentConfig}\n        onFinish={currentConfig ? handleEditS3Config : handleAddS3Config}\n        onCancel={() => setModalVisible(false)}\n      />\n    </div>\n  );\n};\n\nexport default S3Management;"],"names":[],"mappings":"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"}